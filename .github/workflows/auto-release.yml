name: Auto Release on Push

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
      - "webpack.config.js"

jobs:
  check-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check if version changed
        id: version_check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if git tag -l | grep -q "v$CURRENT_VERSION"; then
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists"
          else
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "New version detected: $CURRENT_VERSION"
          fi

      - name: Lint and format check
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          npm run lint
          npm run format

      - name: Build extension
        if: steps.version_check.outputs.version_changed == 'true'
        run: npm run build

      - name: Configure Git
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create and push tag
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          git tag v${{ steps.version_check.outputs.new_version }}
          git push origin v${{ steps.version_check.outputs.new_version }}

      - name: Generate changelog
        if: steps.version_check.outputs.version_changed == 'true'
        id: changelog
        run: |
          # Láº¥y commit messages tá»« tag trÆ°á»›c Ä‘Ã³
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            CHANGELOG=$(git log $LAST_TAG..HEAD --oneline --pretty=format:"- %s" | head -10)
          else
            CHANGELOG=$(git log --oneline --pretty=format:"- %s" | head -10)
          fi

          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- Initial release"
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.version_check.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version_check.outputs.new_version }}
          release_name: YouTube Tweaks v${{ steps.version_check.outputs.new_version }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.changelog }}

            ## Installation
            1. Download the `youtube-tweaks-v${{ steps.version_check.outputs.new_version }}.zip` file
            2. Extract the contents
            3. Load the extension in Chrome Developer Mode
          draft: false
          prerelease: false

      - name: Upload Extension ZIP
        if: steps.version_check.outputs.version_changed == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/youtube-tweaks-v${{ steps.version_check.outputs.new_version }}.zip
          asset_name: youtube-tweaks-v${{ steps.version_check.outputs.new_version }}.zip
          asset_content_type: application/zip

      - name: Notify success
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          echo "ðŸŽ‰ Successfully released version ${{ steps.version_check.outputs.new_version }}"
          echo "ðŸ“¦ Extension ZIP uploaded to GitHub Release"
