name: Release Extension

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: "Release notes (optional)"
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: version
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build extension
        run: npm run build

      - name: Create release notes
        id: release_notes
        run: |
          if [ -n "${{ github.event.inputs.release_notes }}" ]; then
            echo "notes=${{ github.event.inputs.release_notes }}" >> $GITHUB_OUTPUT
          else
            echo "notes=Release version ${{ steps.version.outputs.new_version }}" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        run: |
          git add package.json package-lock.json
          git commit -m "Release v${{ steps.version.outputs.new_version }}"
          git tag ${{ steps.version.outputs.tag_name }}
          git push origin main
          git push origin ${{ steps.version.outputs.tag_name }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          release_name: YouTube Tweaks v${{ steps.version.outputs.new_version }}
          body: ${{ steps.release_notes.outputs.notes }}
          draft: false
          prerelease: false

      - name: Upload Extension ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/youtube-tweaks-v${{ steps.version.outputs.new_version }}.zip
          asset_name: youtube-tweaks-v${{ steps.version.outputs.new_version }}.zip
          asset_content_type: application/zip

      - name: Upload Source Code
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/youtube-tweaks-v${{ steps.version.outputs.new_version }}.zip
          asset_name: source-code.zip
          asset_content_type: application/zip
